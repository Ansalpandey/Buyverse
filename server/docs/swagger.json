{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for the Buyverse Platform",
    "version": "1.0.0",
    "title": "Buyverse API",
    "contact": {
      "email": "support@buyverse.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "Endpoint to register a new user in the system.",
        "operationId": "registerUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Endpoint for user login.",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Forgot password",
        "description": "Endpoint to initiate a password reset.",
        "operationId": "forgotPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User email for password reset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Invalid email",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/request-otp": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request OTP",
        "description": "Endpoint to request an OTP for operations like password reset.",
        "operationId": "requestOTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User email to send OTP",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestOTP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Invalid email",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/verify-otp": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify OTP",
        "description": "Endpoint to verify OTP received by the user.",
        "operationId": "verifyOTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "OTP verification data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyOTP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Invalid or expired OTP",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "description": "Endpoint to reset the user's password after OTP verification.",
        "operationId": "resetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New password data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "description": "Endpoint to retrieve all products.",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a single product",
        "description": "Endpoint to retrieve a single product by ID.",
        "operationId": "getProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products/category/{category}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products by category",
        "description": "Endpoint to retrieve products by category.",
        "operationId": "getCategoryProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products in the category",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "404": {
            "description": "No products found in this category",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products/price/{min}/{max}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products within a price range",
        "description": "Endpoint to retrieve products within a specific price range.",
        "operationId": "getPriceRangeProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "min",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Minimum price"
          },
          {
            "name": "max",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Maximum price"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products within the price range",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "404": {
            "description": "No products found within this price range",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products/seller/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products by seller",
        "description": "Endpoint to retrieve products by a specific seller.",
        "operationId": "getSellerProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Seller ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products by the seller",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "404": {
            "description": "Seller not found or no products found for this seller",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/delivery-agents": {
      "get": {
        "tags": [
          "Delivery Agents"
        ],
        "summary": "Get all delivery agents",
        "description": "Endpoint to retrieve all registered delivery agents.",
        "operationId": "getAllDeliveryAgents",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of delivery agents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryAgent"
              }
            }
          },
          "404": {
            "description": "No delivery agents found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/delivery-agents/register": {
      "post": {
        "tags": [
          "Delivery Agents"
        ],
        "summary": "Register a delivery agent",
        "description": "Endpoint to register a new delivery agent.",
        "operationId": "registerDeliveryAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Delivery agent registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterDeliveryAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery agent registered successfully",
            "schema": {
              "$ref": "#/definitions/DeliveryAgentResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/delivery-agents/login": {
      "post": {
        "tags": [
          "Delivery Agents"
        ],
        "summary": "Delivery agent login",
        "description": "Endpoint for delivery agent login.",
        "operationId": "loginDeliveryAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Delivery agent login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginDeliveryAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/delivery-agents/verify": {
      "post": {
        "tags": [
          "Delivery Agents"
        ],
        "summary": "Verify delivery agent OTP",
        "description": "Endpoint to verify OTP for delivery agent operations.",
        "operationId": "verifyDeliveryAgentOTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "OTP verification data for delivery agent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyOTP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Invalid or expired OTP",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterUser": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "format": "password",
          "example": "SecurePassword123!"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "format": "password",
          "example": "SecurePassword123!"
        }
      }
    },
    "ForgotPassword": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        }
      }
    },
    "RequestOTP": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        }
      }
    },
    "VerifyOTP": {
      "type": "object",
      "required": [
        "email",
        "otp"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        },
        "otp": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "ResetPassword": {
      "type": "object",
      "required": [
        "email",
        "newPassword"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        },
        "newPassword": {
          "type": "string",
          "format": "password",
          "example": "NewSecurePassword123!"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User registered successfully"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User logged in successfully!"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Operation completed successfully"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "An error occurred"
        },
        "error": {
          "type": "string",
          "example": "Detailed error message"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "60c72b2f5f1b2c6d88f1a4f5"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "name",
        "price",
        "description",
        "category",
        "seller"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "prod123"
        },
        "name": {
          "type": "string",
          "example": "Gadget Pro"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 299.99
        },
        "description": {
          "type": "string",
          "example": "Latest model of the Gadget Pro with enhanced features."
        },
        "category": {
          "type": "string",
          "example": "Electronics"
        },
        "seller": {
          "type": "string",
          "example": "seller123"
        },
        "stock": {
          "type": "integer",
          "example": 150
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "http://example.com/image1.jpg"
          }
        }
      }
    },
    "DeliveryAgent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "agent123"
        },
        "name": {
          "type": "string",
          "example": "Jane Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "jane.doe@example.com"
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        },
        "status": {
          "type": "string",
          "example": "active"
        }
      }
    },
    "RegisterDeliveryAgent": {
      "type": "object",
      "required": [
        "name",
        "email",
        "phone"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Jane Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "jane.doe@example.com"
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        }
      }
    },
    "LoginDeliveryAgent": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "jane.doe@example.com"
        },
        "password": {
          "type": "string",
          "format": "password",
          "example": "SecurePassword123!"
        }
      }
    }
  }
}